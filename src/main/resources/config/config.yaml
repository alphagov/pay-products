server:
  applicationConnectors:
    - type: http
      port: ${PORT:-8080}
  adminConnectors:
    - type: http
      port: ${ADMIN_PORT:-8081}
  requestLog:
    appenders:
      - type: console
        layout:
          type: govuk-pay-access-json
          additionalFields:
            container: "products"
            environment: ${ENVIRONMENT}

logging:
  level: INFO
  appenders:
    - type: logstash-console
      threshold: ALL
      target: stdout
      customFields:
        container: "products"
        environment: ${ENVIRONMENT}
    - type: sentry
      threshold: ERROR
      dsn: ${SENTRY_DSN:-https://example.com@dummy/1}
      environment: ${ENVIRONMENT}

database:
  driverClass: org.postgresql.Driver
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  url: jdbc:postgresql://${DB_HOST:-products.db.pymnt.localdomain}:${DB_PORT:-5432}/${DB_NAME:-products}?sslfactory=org.postgresql.ssl.DefaultJavaSSLFactory&${DB_SSL_OPTION}

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "SELECT '1'"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 2s

  # The initial size of the connection pool
  initialSize: 4

  # the minimum number of connections to keep open
  minSize: 4

  # the maximum number of connections to keep open
  maxSize: 8

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute

jpa:
  jpaLoggingLevel: ${JPA_LOG_LEVEL:-WARNING}
  sqlLoggingLevel: ${JPA_SQL_LOG_LEVEL:-WARNING}
  ddlGenerationOutputMode: database
  queryResultsCache: false
  cacheSharedDefault: false

jerseyClientConfiguration:
  disabledSecureConnection: "false"

emailAddressForReplacingApiTokens: ${EMAIL_ADDRESS_FOR_REPLACING_API_TOKENS}

baseUrl: ${BASE_URL}
publicApiUrl: ${PUBLICAPI_URL}
publicAuthUrl: ${PUBLICAUTH_URL}
productsUiPayUrl: ${PRODUCTSUI_PAY_URL}
productsUiConfirmUrl: ${PRODUCTSUI_CONFIRMATION_URL}
friendlyBaseUri: ${PRODUCTS_FRIENDLY_BASE_URI}
returnUrlMustBeSecure: ${SECURE_RETURN_URLS:-true}

ecsContainerMetadataUriV4: ${ECS_CONTAINER_METADATA_URI_V4:-}

expungeHistoricalDataConfig:
  expungeHistoricalDataEnabled: ${EXPUNGE_HISTORICAL_DATA_ENABLED:-false}
  expungeDataOlderThanDays: ${EXPUNGE_DATA_OLDER_THAN_DAYS:-2555}
  numberOfPaymentsToExpunge: ${EXPUNGE_NO_OF_PAYMENTS_PER_TASK_RUN:-2500}
